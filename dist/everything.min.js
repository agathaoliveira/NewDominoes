var Play;!function(a){a[a.LEFT=0]="LEFT",a[a.RIGHT=1]="RIGHT",a[a.BUY=2]="BUY",a[a.PASS=3]="PASS",a[a.REVEAL=4]="REVEAL",a[a.END=5]="END"}(Play||(Play={}));var gameLogic;!function(a){function b(a,b){a.root=b,a.leftMost=b.tileKey,a.rightMost=b.tileKey}function c(a,b){for(var c=a.rightMost,d=a.root;d.tileKey!==c;)d=d.rightTile;d.rightTile=b,a.rightMost=b.tileKey}function d(a,b){for(var c=a.leftMost,d=a.root;d.tileKey!==c;)d=d.leftTile;d.leftTile=b,a.leftMost=b.tileKey}function e(a,b){a.hand.push(b)}function f(a,b){var c=a.hand.indexOf(b,0);if(void 0===c||-1===c)throw new Error("Unknown array element "+JSON.stringify(b));a.hand.splice(c,1)}function g(a){return a.hand.length}function h(){return{}}function i(a){var b,c,d,e,f,g=[],i=[],j=[],k={id:-1,hand:[]},l=[],m=[],n={keys:[]};f=2===a?7:5,d=0,e=0;var o=0;for(b=0;7>b;b++)for(c=0;b>=c;c++){var p={leftNumber:c,rightNumber:b};a>o?(j[o]||(j[o]={id:o,hand:[]}),j[o].hand.push("tile"+d),m[d]={key:"tile"+d,visibleToPlayerIndexes:[o]},e++,l[d]={key:"tile"+d,value:p},e===f&&(o++,e=0)):(k.hand.push("tile"+d),l[d]={key:"tile"+d,value:p},m[d]={key:"tile"+d,visibleToPlayerIndexes:[]}),g.push({set:l[d]}),i.push({setVisibility:m[d]}),n.keys.push("tile"+d),d++}var q=h();return g.push({setTurn:{turnIndex:0}}),g.push({set:{key:"house",value:k}}),g.push({set:{key:"board",value:q}}),g.push({shuffle:n}),g.push({set:{key:"players",value:j}}),g.concat(i)}function j(a){return 0===g(a)?a.id:void 0}function k(a){for(var b=[],c=0;a>c;c++)b.push(c);return b}function l(a,b,c,d,e){var f=[];return f.push({setTurn:{turnIndex:a}}),f.push({set:{key:"board",value:b}}),f.push({set:{key:"delta",value:c}}),f.push({setVisibility:d}),f.push({set:{key:"players",value:e}}),f}function m(a,b){for(var c,d=0,e=0;e<a.hand.length;e++)c=b[a.hand[e]],d=d+c.leftNumber+c.rightNumber;return d}function n(a,b){if(a.rightNumber!==b&&a.leftNumber!==b)throw new Error("Cannot place tile at the board! Numbers are invalid.")}function o(a,b,c){for(var d=[],e=[],f=a.length,g=336,h=-1,i=0,j=0;f>j;j++)e[j]=m(a[j],b),i+=e[j],e[j]<g&&(g=e[j],h=j);for(var k=[],j=0;f>j;j++)j===h?k[j]=i-2*e[j]:k[j]=0;for(var j=0;28>j;j++)d.push({set:{key:"tile"+j,value:b["tile"+j]}});return d.push({endMatch:{endMatchScores:k}}),d.push({set:{key:"delta",value:c}}),d}function p(a,b,c){var d=[];return d.push({setTurn:{turnIndex:(a+1)%b}}),d.push({set:{key:"delta",value:c}}),d}function q(a,b,c,d){for(var e=[],f=k(a),g=0;28>g;g++)e.push({setVisibility:{key:"tile"+g,visibleToPlayerIndexes:f}});return e.push({setTurn:{turnIndex:b}}),e.push({set:{key:"delta",value:c}}),e.push({set:{key:"players",value:d}}),e}function r(a,b,c,d,h,i,j,k){var m,n;if(0===g(a))throw new Error("One cannot buy from the house when it has no tiles");return f(a,b),e(c,b),n={key:b,visibleToPlayerIndexes:[j]},h.currentLeft=k.board.currentLeft,h.currentRight=k.board.currentRight,d[j]=c,m=l(j,h,i,n,d),m=m.concat([{set:{key:"house",value:a}}])}function s(a,e,h,i,m,o,p,r){for(var s,t=i.length,u={tileKey:m},v=0;t>v;v++)if(j(i[v])===i[v].id)throw new Error("Can only make a move if the game is not over! Player "+v+" has already won.");if(a.root)if(p===Play.RIGHT){var w=r[m],x=r.board.currentRight;n(w,x),a.currentRight=x,a.currentLeft=r.board.currentLeft,c(a,u)}else{var w=r[m],y=r.board.currentLeft;n(w,y),a.currentLeft=y,a.currentRight=r.board.currentRight,d(a,u)}else{var w=r[m];if(w.leftNumber!=w.rightNumber)throw new Error("First tile must be a double");b(a,u)}if(f(h,m),i[o]=h,0!==g(h)){s={key:m,visibleToPlayerIndexes:k(t)};var z=(o+1)%t;return l(z,a,e,s,i)}return e.play=Play.REVEAL,q(t,o,e,i)}function t(a,b,c,d){var e,f,g,h,i=c?c.tileKey:void 0,j=void 0===c?void 0:c.play,k=a.players,l=a.house,m=a.board;if(e=angular.copy(m),f=angular.copy(k),g=angular.copy(k[b]),h=angular.copy(l),Play.LEFT===j||Play.RIGHT===j)return s(e,c,g,f,i,b,j,d);if(Play.BUY===j)return r(h,i,g,f,e,c,b,d);if(Play.PASS==j)return p(b,f.length,c);if(Play.REVEAL===j)return q(f.length,b,c,d.players);if(Play.END===j)return o(f,d,c);throw new Error("Unknown play")}function u(a,b){if(!angular.equals(a,b)){console.log("Found diff between: ",a,b),angular.equals(Object.keys(a),Object.keys(b))||console.log("Keys different: ",JSON.stringify(Object.keys(a)),JSON.stringify(Object.keys(b)));for(var c in a)u(a[c],b[c])}}function v(a){var b=a.move,c=a.turnIndexBeforeMove,d=a.stateBeforeMove,e=a.numberOfPlayers;try{if(e>4)throw Error("A maximum of 4 players are allowed for this game");var f;if(f=a.stateBeforeMove&&a.stateBeforeMove.board&&a.stateAfterMove.board.root?t(d,c,a.stateAfterMove.delta,a.stateAfterMove):i(e),!angular.equals(b,f))return u(b,f),!1}catch(g){return console.log("EXCEPTION ON IS MOVE OK: "+g),!1}return!0}a.getInitialBoard=h,a.getInitialMove=i,a.createMoveEndGame=o,a.createMovePass=p,a.createMoveReveal=q,a.createMoveBuy=r,a.createMovePlay=s,a.createMove=t,a.isMoveOk=v}(gameLogic||(gameLogic={}));var game;!function(a){function b(){console.log("Translation of 'RULES_OF_TICTACTOE' is "+translate("RULES_OF_TICTACTOE")),resizeGameAreaService.setWidthToHeight(2),gameService.setGame({minNumberOfPlayers:2,maxNumberOfPlayers:2,isMoveOk:gameLogic.isMoveOk,updateUI:c}),$rootScope.hasGameEnded=!1,document.addEventListener("animationend",d,!1),document.addEventListener("webkitAnimationEnd",d,!1),document.addEventListener("oanimationend",d,!1)}function c(a){if(O=!1,R=a.stateAfterMove,U=[],V=[],W=[],$rootScope.yourPlayerIndex=a.yourPlayerIndex,$rootScope.turnIndex=a.turnIndexAfterMove,$rootScope.hasGameEnded=!1,N(0,0,void 0),log.info("updateUI(): updating UI."),!R.board&&a.yourPlayerIndex===a.turnIndexAfterMove){var b=gameLogic.getInitialMove(a.numberOfPlayers);return log.info("updateUI(): make initial move. Calling makeMove "+JSON.stringify(b)),void gameService.makeMove(b)}if(P=a.turnIndexAfterMove>=0&&a.yourPlayerIndex===a.turnIndexAfterMove,S=a.turnIndexAfterMove,R&&R.delta&&R.delta.play===Play.REVEAL){var c={play:Play.END};R.delta=c;var b=gameLogic.createMove(R,a.turnIndexAfterMove,c,R);return void gameService.makeMove(b)}if(R&&R.delta&&R.delta.play===Play.END)return $rootScope.hasGameEnded=!0,$rootScope.scores=a.endMatchScores,void($rootScope.yourPlayerIndex=a.turnIndexBeforeMove);if(P&&i(a.stateBeforeMove)&&i(a.stateAfterMove)){var c={play:Play.REVEAL},b=gameLogic.createMove(R,a.turnIndexAfterMove,c,R);return void gameService.makeMove(b)}Q=P&&""===a.playersInfo[a.yourPlayerIndex].playerId,Q&&(P=!1,g())}function d(){$rootScope.$apply(function(){log.info("Animation ended"),O=!0,Q&&g()})}function e(){return W[5]?5:W[4]?4:W[3]?3:W[2]?2:W[0]?0:void 0}function f(){return W[8]?8:W[7]?7:W[6]?6:W[1]?1:W[0]?0:void 0}function g(){var a=h(!1,e()),b=h(!0,f());R.board.currentLeft=a,R.board.currentRight=b,log.info("sendComputerMove(): Calling make move for computer move for left number: "+a+" and right number "+b),gameService.makeMove(aiService.createComputerMove(S,R,a,b))}function h(a,b){var c=X[b]?X[b][X[b].length-1].tileKey:void 0,d=c?R[c]:void 0,e=W[b]?W[b][W[b].length-1]:void 0;if(a){var f=void 0===e?void 0:"regular"===e?d.rightNumber:d.leftNumber;return f}var g=void 0===e?void 0:"regular"===e?d.rightNumber:d.leftNumber;return g}function i(a){return a&&a.delta&&a.delta.play&&a.delta.play===Play.PASS?!0:!1}function j(){if(log.info("Tried to pass"),P)try{var a=Play.PASS;$rootScope.selectedTile=void 0;var b=gameLogic.createMove(R,S,{play:a},R);P=!1,log.info("Making move to pass"),gameService.makeMove(b)}catch(c){return void log.info("Cannot make pass play")}}function k(a){if(log.info(["Tried to make play for tree:",a]),"?throwException"===window.location.search)throw new Error("Throwing the error because URL has '?throwException'");if(P&&void 0!==$rootScope.selectedTile)try{var b=F(a)?Play.RIGHT:Play.LEFT,c=$rootScope.selectedTile;R.delta={play:b,tileKey:c};var d=h(!1,e()),g=h(!0,f());void 0===d&&void 0===g&&(d=R[c].leftNumber,g=R[c].rightNumber),R.board.currentLeft=d,R.board.currentRight=g;var i=gameLogic.createMove(R,S,{play:b,tileKey:c},R);P=!1,log.info("placeTileOnTree(): Making move to place tile on tree. Calling makeMove with move "+JSON.stringify(i)),$rootScope.selectedTile=void 0,gameService.makeMove(i)}catch(j){return void log.info(["Cannot make play for tree:",a])}}function l(a,b){return G(R.players[a].hand?R[R.players[a].hand[b]]:void 0)}function m(a){return R.players&&R.players[a]&&R.players[a].hand?r(R.players[a].hand.length):[]}function n(){return R&&R.players?R.players.length-1:1}function o(a){if(P&&R&&R.house&&R.house.hand[a])try{var b={play:Play.BUY,tileKey:R.house.hand[a]},c=gameLogic.createMove(R,S,b,R);P=!1,gameService.makeMove(c)}catch(d){return void log.info(["Cannot make buy play for tile:",a])}}function p(a){var b=R.players;if(!b)return[];for(var c=[],d=0;d<b.length;d++)d!=a&&c.push(d);return c}function q(){return R.house&&R.house.hand?r(R.house.hand.length):[]}function r(a){for(var b=[],c=0;a>c;c++)b.push(c);return b}function s(a,b){return!O&&R.delta&&R.delta.play===Play.BUY&&R.players[b].hand[a]===R.delta.tileKey}function t(a,b){if(O||!R.delta)return!1;var c=u(a,b);return c&&R.delta.tileKey===c.tileKey}function u(a,b){return X[b]?X[b][a]:void 0}function v(a,b){var c=u(a,b);return!(void 0===c)}function w(a){$rootScope.selectedTile=R.players[$rootScope.yourPlayerIndex].hand[a]}function x(a){$rootScope.tile=R.house.hand[a]}function y(a){return 1===a?0:6===a?1:7===a?6:2===a?0:3===a?2:4===a?3:5===a?4:void 0}function z(a,b){return b?0===a?1:1===a?6:6===a?7:7===a?8:void 0:0===a?2:2===a?3:3===a?4:4===a?5:void 0}function A(a,b){if(void 0===R.board||void 0===R.board.root)return-1;var c=R.board;if(c.root.tileKey===b)return 0;for(var d=1,e=a?c.root.rightTile:c.root.leftTile;e.tileKey!=b;)d+=1,e=a?e.rightTile:e.leftTile;return d}function B(a,b){return W[b]&&W[b][a]?W[b][a]:void 0}function C(a,b,c){return V[b]&&V[b][a]?c===V[b][a]:void 0}function D(a,b){return 0===a?"rootTile":1===a?b?"horizontalTile":"horizontalTileFlip":2===a?b?"horizontalTileFlip":"horizontalTile":3===a||4===a?b?"maxWidthHeightTileFlip":"maxWidthHeightTile":5===a?b?"tree5Tile":"tree5TileFlip":6===a?b?"maxWidthHeightTile":"maxWidthHeightTileFlip":7===a?b?"tree5TileFlip":"tree5Tile":void 0}function E(a,b){return U[b]&&U[b][a]?U[b][a]:void 0}function F(a){return 0===a||1===a||6===a||7===a||8===a}function G(a){return void 0===a||null===a?"imgs/dominoes/domino-blank.svg":a.leftNumber<=a.rightNumber?"imgs/dominoes/domino-"+a.leftNumber+"-"+a.rightNumber+".svg":"imgs/dominoes/domino-"+a.rightNumber+"-"+a.leftNumber+".svg"}function H(a){var b=$rootScope.scores;return""+b[a]}function I(a){var b=a%2;return(0>b||b===-0)&&(b=0),"imgs/player/image"+b+".svg"}function J(a,b){var c=R.players[b]?R.players[b].hand[a]:void 0;return void 0===$rootScope.selectedTile?!1:$rootScope.selectedTile===c}function K(a){var b=R.board&&R.board.root?L():M(a);return!$rootScope.hasGameEnded&&!b}function L(){return R.house&&R.house.hand&&0!==R.house.hand.length}function M(a){if(R.board&&R.board.root||!R.players||!R.players[a]||!R.players[a].hand)return!1;for(var b=0;b<R.players[a].hand.length;b++){var c=R[R.players[a].hand[b]];if(c.leftNumber===c.rightNumber)return!0}return!1}function N(a,b,c,d){var e=R.board,f=void 0,g=!1;if(e&&e.root){if(0===b){f=R[e.root.tileKey];var h="regular";W[a]||(W[a]=[],U[a]=[],V[a]=[],X[a]=[]);var i=G(void 0===f?void 0:f),j=D(a,!1);W[a][b]=h,U[a][b]=i,V[a][b]=j,X[a][b]=e.root;var k=z(a,!0),l=T[k][0];return N(k,l,!0,e.root),k=z(a,!1),l=T[k][0],void N(k,l,!1,e.root)}if(f=c?d.rightTile:d.leftTile,void 0!==f){var m=R[f.tileKey];d=R[d.tileKey];var n=!1;if(W[a])n="flipped"===W[a][b-1];else{var o=y(a);n="flipped"===W[o][W[o].length-1]}void 0!==m&&(!n&&d.leftNumber>=d.rightNumber?m.rightNumber===d.leftNumber&&m.rightNumber>m.leftNumber?g=!0:m.leftNumber===d.leftNumber&&m.leftNumber>m.rightNumber&&(g=!0):!n&&d.rightNumber>=d.leftNumber?m.rightNumber===d.rightNumber&&m.rightNumber>m.leftNumber?g=!0:m.leftNumber===d.rightNumber&&m.leftNumber>m.rightNumber&&(g=!0):n&&d.rightNumber<=d.leftNumber?m.rightNumber===d.rightNumber&&m.rightNumber>m.leftNumber?g=!0:m.leftNumber===d.rightNumber&&m.leftNumber>m.rightNumber&&(g=!0):n&&d.leftNumber<=d.rightNumber&&(m.rightNumber===d.leftNumber&&m.rightNumber>m.leftNumber?g=!0:m.leftNumber===d.leftNumber&&m.leftNumber>m.rightNumber&&(g=!0)));var h=g?"flipped":"regular",i=G(void 0===m?void 0:m),j=D(a,"flipped"===h);W[a]||(W[a]=[],U[a]=[],V[a]=[],X[a]=[]),W[a][b]=h,U[a][b]=i,V[a][b]=j,X[a][b]=f;var k,l;b===T[a][T[a].length-1]?(k=z(a,c),l=void 0===k?void 0:T[k][0]):(k=a,l=b+1),void 0!==k&&N(k,l,c,f)}}}var O=!1,P=!1,Q=!1,R=null,S=null,T=[[0],[1,2,3,4,5,6,7],[1,2,3,4,5,6],[7],[8],[9,10,11,12,13,14,15,16,17,18,19,20,21,22],[8],[9,10,11,12,13,14,15,16,17,18,19,20,21,22]],U=[],V=[],W=[],X=[];document.getElementById("gameArea"),document.getElementById("currentPlayer");a.isHelpModalShown=!1,a.init=b,a.passPlay=j,a.placeTileOnTree=k,a.getTileImageSourceForPlayer=l,a.getNumberOfTilesForPlayer=m,a.getNumberOfPlayers=n,a.makeBuyPlay=o,a.getOpponentIds=p,a.getNumberOfTilesForBoneYard=q,a.shouldSlowlyAppear=s,a.shouldEnlarge=t,a.shouldShowImage=v,a.registerSelectedPlayerTile=w,a.registerSelectedHouseTile=x,a.getTileLevel=A,a.getTileOrientation=B,a.getImageClass=C,a.getImageSource=E,a.getFinalScore=H,a.getPlayerIconSource=I,a.isSelectedTile=J,a.isPassAllowed=K}(game||(game={})),angular.module("myApp",["ngTouch","ui.bootstrap","gameServices"]).run(function(){$rootScope.game=game,translate.setLanguage("en",{RULES_OF_TICTACTOE:"Rules of Dominoes",RULES_SLIDE1:"This game is played according to the draw rules. The first player to join the game who has a double places the first domino. If you don't have a double tile, click on pass",RULES_SLIDE2:"Each player adds a domino to an open end of the layout, if he/she can. The layout flows left/right as necessary.",RULES_SLIDE3:"If a player is unable to make a move, he/she must draw dominoes from the boneyard until he can make a move. If there are no dominoes left, then the player must pass.",RULES_SLIDE4:"A game ends either when a player plays all his/her tiles, or when a game is blocked. A game is blocked when no player is able to add another tile to the layout.",RULES_SLIDE5:"When a hand ends, the player with the lightest hand (i.e. the fewest number of dots on their dominoes) wins the number of sum total of points in all of his opponents hands (minus the points in his own hand, if any)",PASS:"PASS",CLOSE:"Close"}),game.init()});var aiService;!function(a){function b(a,b,d,e){for(var f=b.board,g=b.players[a].hand,h=b.house?b.house.hand.length:0,i=void 0,j=void 0,k=0;k<g.length;k++)if(f&&f.root?j=c(b[g[k]],d,e):b[g[k]].leftNumber===b[g[k]].rightNumber&&(j=Play.RIGHT),void 0!==j){i=g[k];break}void 0===j&&(f&&f.root&&0!=h?(j=Play.BUY,i=b.house.hand[0]):j=Play.PASS);var l=j!==Play.PASS?{tileKey:i,play:j}:{play:j};b.delta=l;var m=gameLogic.createMove(b,a,l,b);return m}function c(a,b,c){return a.leftNumber===b||a.rightNumber===b?Play.LEFT:a.leftNumber===c||a.rightNumber===c?Play.RIGHT:void 0}a.createComputerMove=b}(aiService||(aiService={}));
//# sourceMappingURL=everything.min.js.map